// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Autobuska_Stanica.Migrations
{
    [DbContext(typeof(AutobuskaStanicaContext))]
    partial class AutobuskaStanicaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Autobus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Registacija")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("StanicaID")
                        .HasColumnType("int");

                    b.Property<int>("brojSedista")
                        .HasColumnType("int")
                        .HasColumnName("BrojSedista");

                    b.HasKey("ID");

                    b.HasIndex("StanicaID");

                    b.ToTable("Autobus");
                });

            modelBuilder.Entity("Models.AutobuskaStanica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("AutobuskaStanica");
                });

            modelBuilder.Entity("Models.Odrediste", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Zemlja")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("nazivStanice")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Odrediste");
                });

            modelBuilder.Entity("Models.Voznja", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AutobusID")
                        .HasColumnType("int");

                    b.Property<int>("BrojPresedanja")
                        .HasColumnType("int");

                    b.Property<int>("DolazniOdlazni")
                        .HasColumnType("int");

                    b.Property<int>("IdAutobus")
                        .HasColumnType("int");

                    b.Property<int>("IdOdredista")
                        .HasColumnType("int");

                    b.Property<int?>("OdredisteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.Property<int>("ocekivanaDuzinaPuta")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AutobusID");

                    b.HasIndex("OdredisteID");

                    b.ToTable("Voznje");
                });

            modelBuilder.Entity("Models.Autobus", b =>
                {
                    b.HasOne("Models.AutobuskaStanica", "Stanica")
                        .WithMany("Autobus")
                        .HasForeignKey("StanicaID");

                    b.Navigation("Stanica");
                });

            modelBuilder.Entity("Models.Voznja", b =>
                {
                    b.HasOne("Models.Autobus", "Autobus")
                        .WithMany("Voznja")
                        .HasForeignKey("AutobusID");

                    b.HasOne("Models.Odrediste", "Odrediste")
                        .WithMany("Voznja")
                        .HasForeignKey("OdredisteID");

                    b.Navigation("Autobus");

                    b.Navigation("Odrediste");
                });

            modelBuilder.Entity("Models.Autobus", b =>
                {
                    b.Navigation("Voznja");
                });

            modelBuilder.Entity("Models.AutobuskaStanica", b =>
                {
                    b.Navigation("Autobus");
                });

            modelBuilder.Entity("Models.Odrediste", b =>
                {
                    b.Navigation("Voznja");
                });
#pragma warning restore 612, 618
        }
    }
}
